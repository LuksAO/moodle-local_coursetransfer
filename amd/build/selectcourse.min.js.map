{"version":3,"file":"selectcourse.min.js","sources":["../src/selectcourse.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n// Project implemented by the \"Recovery, Transformation and Resilience Plan.\n// Funded by the European Union - Next GenerationEU\".\n//\n// Produced by the UNIMOODLE University Group: Universities of\n// Valladolid, Complutense de Madrid, UPV/EHU, León, Salamanca,\n// Illes Balears, Valencia, Rey Juan Carlos, La Laguna, Zaragoza, Málaga,\n// Córdoba, Extremadura, Vigo, Las Palmas de Gran Canaria y Burgos.\n\n/**\n *\n * @module     local_coursetransfer\n * @copyright  2023 Proyecto UNIMOODLE\n * @author     UNIMOODLE Group (Coordinator) <direccion.area.estrategia.digital@uva.es>\n * @author     3IPUNT <contacte@tresipunt.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n\ndefine([\n        'jquery',\n        'core/str',\n        'core/ajax',\n        'core/templates'\n    ], function($, Str, Ajax, Templates) {\n        \"use strict\";\n\n        let REGIONS = {\n            CATFORNEW: '[data-region=\"category-for-new\"]',\n            COURSEFOREXIST: '[data-region=\"course-for-exist\"]',\n            CATTARGETNAME: '[data-region=\"cattargetname\"]',\n            CHANGEBUTTON: '[data-region=\"change-button\"]'\n        };\n\n        let ACTIONS = {\n            NEWOREXIST: '[data-action=\"new-or-exist\"]',\n            TARGETCAT: '[data-action=\"target-category\"]'\n        };\n\n        let INPUTS = {\n            VALUE: '[data-input=\"value\"]'\n        };\n\n        /**\n         * @param {String} region\n         * @param {Number} courseid\n         *\n         * @constructor\n         */\n        function selectcourse(region, courseid) {\n            this.node = $(region);\n            this.courseid = courseid;\n            this.node.find(REGIONS.COURSEFOREXIST).hide();\n            this.node.find(ACTIONS.NEWOREXIST).on('change', this.neworexist.bind(this));\n            this.node.find(ACTIONS.TARGETCAT).on('change', this.targetcat.bind(this));\n        }\n\n        /**\n         */\n        selectcourse.prototype.neworexist = function() {\n            let value = parseInt(this.node.find(ACTIONS.NEWOREXIST).val());\n            if (value === 0) {\n                this.node.find(REGIONS.CATFORNEW).show();\n                this.node.find(REGIONS.COURSEFOREXIST).hide();\n                this.node.find(REGIONS.CATTARGETNAME).show();\n            } else {\n                this.node.find(REGIONS.CATFORNEW).hide();\n                this.node.find(REGIONS.COURSEFOREXIST).show();\n                this.node.find(REGIONS.CATTARGETNAME).hide();\n            }\n        };\n\n        /**\n         */\n        selectcourse.prototype.targetcat = function() {\n            let name = this.node.find(ACTIONS.TARGETCAT).children(\"option:selected\").text();\n            let id = this.node.find(ACTIONS.TARGETCAT).val();\n            this.node.find(REGIONS.CATTARGETNAME).text(name);\n            this.node.find(REGIONS.CHANGEBUTTON).data('categorytarget', id);\n        };\n\n        selectcourse.prototype.node = null;\n\n        return {\n            /**\n             * @param {String} region\n             * @param {Number} courseid\n             * @return {selectcourse}\n             */\n            initSelectcourse: function(region, courseid) {\n                // eslint-disable-next-line babel/new-cap\n                return new selectcourse(region, courseid);\n            }\n        };\n    });\n"],"names":["define","$","Str","Ajax","Templates","REGIONS","ACTIONS","selectcourse","region","courseid","node","find","hide","on","this","neworexist","bind","targetcat","prototype","parseInt","val","show","name","children","text","id","data","initSelectcourse"],"mappings":";;;;;;;;AAkCAA,2CAAO,CACC,SACA,WACA,YACA,mBACD,SAASC,EAAGC,IAAKC,KAAMC,eAGlBC,kBACW,mCADXA,uBAEgB,mCAFhBA,sBAGe,gCAHfA,qBAIc,gCAGdC,mBACY,+BADZA,kBAEW,2CAaNC,aAAaC,OAAQC,eACrBC,KAAOT,EAAEO,aACTC,SAAWA,cACXC,KAAKC,KAAKN,wBAAwBO,YAClCF,KAAKC,KAAKL,oBAAoBO,GAAG,SAAUC,KAAKC,WAAWC,KAAKF,YAChEJ,KAAKC,KAAKL,mBAAmBO,GAAG,SAAUC,KAAKG,UAAUD,KAAKF,cAKvEP,aAAaW,UAAUH,WAAa,WAElB,IADFI,SAASL,KAAKJ,KAAKC,KAAKL,oBAAoBc,aAE/CV,KAAKC,KAAKN,mBAAmBgB,YAC7BX,KAAKC,KAAKN,wBAAwBO,YAClCF,KAAKC,KAAKN,uBAAuBgB,cAEjCX,KAAKC,KAAKN,mBAAmBO,YAC7BF,KAAKC,KAAKN,wBAAwBgB,YAClCX,KAAKC,KAAKN,uBAAuBO,SAM9CL,aAAaW,UAAUD,UAAY,eAC3BK,KAAOR,KAAKJ,KAAKC,KAAKL,mBAAmBiB,SAAS,mBAAmBC,OACrEC,GAAKX,KAAKJ,KAAKC,KAAKL,mBAAmBc,WACtCV,KAAKC,KAAKN,uBAAuBmB,KAAKF,WACtCZ,KAAKC,KAAKN,sBAAsBqB,KAAK,iBAAkBD,KAGhElB,aAAaW,UAAUR,KAAO,KAEvB,CAMHiB,iBAAkB,SAASnB,OAAQC,iBAExB,IAAIF,aAAaC,OAAQC"}